"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.filterPriceTrackerProjection = exports.filterSearchHistoryProjection = exports.filterOrder = exports.filterCartProjection = exports.filterDiamond = exports.filterDiamondProjection = exports.filterUser = exports.filterUserProjection = void 0;
exports.filterUserProjection = {
    _id: 1,
    fullName: 1,
    firstName: 1,
    lastName: 1,
    companyName: 1,
    address: 1,
    state: 1,
    city: 1,
    country: 1,
    mobileNumber: 1,
    telephoneNumber: 1,
    email: 1,
    messengerType: 1,
    messengerIdNumber: 1,
    website: 1,
    notes: 1,
    token: 1,
    createdAt: 1,
    updatedAt: 1,
};
const filterUser = (user) => {
    return {
        _id: user._id,
        fullName: user.fullName,
        firstName: user.firstName,
        lastName: user.lastName,
        companyName: user.companyName,
        address: user.address,
        state: user.state,
        city: user.city,
        country: user.country,
        mobileNumber: user.mobileNumber,
        telephoneNumber: user.telephoneNumber,
        email: user.email,
        messengerType: user.messengerType,
        messengerIdNumber: user.messengerIdNumber,
        website: user.website,
        notes: user.notes,
        token: user.token,
        createdAt: user.createdAt,
        updatedAt: user.updatedAt,
    };
};
exports.filterUser = filterUser;
exports.filterDiamondProjection = {
    _id: 1,
    diamondType: 1,
    stoneNo: 1,
    lab: 1,
    inscription: 1,
    shape: 1,
    caratWeight: 1,
    pricePerCarat: 1,
    color: 1,
    fancyColor: 1,
    fancyIntensity: 1,
    fancyOvertone: 1,
    noBGM: 1,
    clarity: 1,
    cut: 1,
    polish: 1,
    symmetry: 1,
    florescence: 1,
    type: 1,
    country: 1,
    state: 1,
    city: 1,
    region: 1,
    shade: 1,
    luster: 1,
    eyeClean: 1,
    milky: 1,
    inclusion: 1,
    extraFacet: 1,
    internalGraining: 1,
    surfaceGraining: 1,
    heartsAndArrows: 1,
    measurement: 1,
    length: 1,
    width: 1,
    height: 1,
    depthPercentage: 1,
    tablePercentage: 1,
    crownAngle: 1,
    crownHeight: 1,
    pavilionAngle: 1,
    pavilionHeight: 1,
    starLength: 1,
    lowerHalves: 1,
    girdleType: 1,
    girdlePercentage: 1,
    culetSize: 1,
    ratio: 1,
    notes: 1,
    videoLink: 1,
    imageLink: 1,
    certificateLink: 1,
    certificateComment: 1,
    motibaGemsComment: 1,
    rap: 1,
    ourPrice: 1,
    ourDiscount: 1,
    keyToSymbol: 1,
    status: 1,
};
const filterDiamond = (diamond) => {
    return {
        _id: diamond._id,
        diamondType: diamond.diamondType,
        stoneNo: diamond.stoneNo,
        lab: diamond.lab,
        inscription: diamond.inscription,
        shape: diamond.shape,
        caratWeight: diamond.caratWeight,
        pricePerCarat: diamond.pricePerCarat,
        color: diamond.color,
        fancyColor: diamond.fancyColor,
        fancyIntensity: diamond.fancyIntensity,
        fancyOvertone: diamond.fancyOvertone,
        noBGM: diamond.noBGM,
        clarity: diamond.clarity,
        cut: diamond.cut,
        polish: diamond.polish,
        symmetry: diamond.symmetry,
        florescence: diamond.florescence,
        type: diamond.type,
        country: diamond.country,
        state: diamond.state,
        city: diamond.city,
        region: diamond.region,
        shade: diamond.shade,
        luster: diamond.luster,
        eyeClean: diamond.eyeClean,
        milky: diamond.milky,
        inclusion: diamond.inclusion,
        extraFacet: diamond.extraFacet,
        internalGraining: diamond.internalGraining,
        surfaceGraining: diamond.surfaceGraining,
        heartsAndArrows: diamond.heartsAndArrows,
        measurement: diamond.measurement,
        length: diamond.length,
        width: diamond.width,
        height: diamond.height,
        depthPercentage: diamond.depthPercentage,
        tablePercentage: diamond.tablePercentage,
        crownAngle: diamond.crownAngle,
        crownHeight: diamond.crownHeight,
        pavilionAngle: diamond.pavilionAngle,
        pavilionHeight: diamond.pavilionHeight,
        starLength: diamond.starLength,
        lowerHalves: diamond.lowerHalves,
        girdleType: diamond.girdleType,
        girdlePercentage: diamond.girdlePercentage,
        culetSize: diamond.culetSize,
        ratio: diamond.ratio,
        notes: diamond.notes,
        videoLink: diamond.videoLink,
        imageLink: diamond.imageLink,
        certificateLink: diamond.certificateLink,
        certificateComment: diamond.certificateComment,
        motibaGemsComment: diamond.motibaGemsComment,
        rap: diamond.rap,
        ourPrice: diamond.ourPrice,
        ourDiscount: diamond.ourDiscount,
        keyToSymbol: diamond.keyToSymbol,
        status: diamond.status,
    };
};
exports.filterDiamond = filterDiamond;
exports.filterCartProjection = {
    diamond: 1,
    diamondSnapshot: 1,
    status: 1,
};
const filterOrder = (order, otherData) => {
    return Object.assign({ _id: order._id, orderNumber: order.orderNumber, items: order.items.map((item) => {
            return Object.assign(Object.assign({}, (0, exports.filterDiamond)(item)), { confirmationStatus: item.confirmationStatus });
        }), remarks: order.remarks, status: order.status, shippingCharge: order.shippingCharge, additionalCharges: order.additionalCharges, grossAmount: order.grossAmount, totalStones: order.totalStones, totalCarats: order.totalCarats, isTermsAccepted: order.isTermsAccepted, createdAt: order.createdAt, user: order.user }, otherData);
};
exports.filterOrder = filterOrder;
exports.filterSearchHistoryProjection = {
    _id: 0,
    filters: 1,
    totalStones: 1,
    createdAt: 1,
};
exports.filterPriceTrackerProjection = {
    diamondSnapshot: 1,
    status: 1,
};
//# sourceMappingURL=userFilters.js.map